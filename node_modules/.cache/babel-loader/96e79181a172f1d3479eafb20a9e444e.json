{"ast":null,"code":"import * as React from 'react';\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef({});\n  const getStateForRoute = React.useCallback(routeKey => {\n    const getter = stateGetters.current[routeKey];\n    return getter === undefined ? undefined : getter();\n  }, [stateGetters]);\n  const addStateGetter = React.useCallback((key, getter) => {\n    stateGetters.current[key] = getter;\n    return () => {\n      stateGetters.current[key] = undefined;\n    };\n  }, []);\n  return {\n    getStateForRoute,\n    addStateGetter\n  };\n}","map":{"version":3,"sources":["useStateGetters.tsx"],"names":["stateGetters","React","getStateForRoute","routeKey","getter","addStateGetter"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAGA;;;;AAIA,eAAe,SAAA,eAAA,GAA2B;AACxC,QAAMA,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,EAAqBA,CAArB;AAIA,QAAMC,gBAAgB,GAAG,KAAK,CAAL,WAAA,CACtBC,QAAD,IAAsB;AACpB,UAAMC,MAAM,GAAGJ,YAAY,CAAZA,OAAAA,CAAf,QAAeA,CAAf;AACA,WAAOI,MAAM,KAANA,SAAAA,GAAAA,SAAAA,GAAmCA,MAA1C,EAAA;AAHqB,GAAA,EAKvB,CALF,YAKE,CALuB,CAAzB;AAQA,QAAMC,cAAc,GAAG,KAAK,CAAL,WAAA,CACrB,CAAA,GAAA,EAAA,MAAA,KAA+C;AAC7CL,IAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,IAAAA,MAAAA;AAEA,WAAO,MAAM;AACXA,MAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,IAAAA,SAAAA;AADF,KAAA;AAJmB,GAAA,EAAvB,EAAuB,CAAvB;AAWA,SAAO;AAAA,IAAA,gBAAA;AAELK,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import * as React from 'react';\nimport type { NavigatorStateGetter } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef<\n    Record<string, NavigatorStateGetter | undefined>\n  >({});\n\n  const getStateForRoute = React.useCallback(\n    (routeKey: string) => {\n      const getter = stateGetters.current[routeKey];\n      return getter === undefined ? undefined : getter();\n    },\n    [stateGetters]\n  );\n\n  const addStateGetter = React.useCallback(\n    (key: string, getter: NavigatorStateGetter) => {\n      stateGetters.current[key] = getter;\n\n      return () => {\n        stateGetters.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    getStateForRoute,\n    addStateGetter,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}